create table if not exists currencies
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp(6),
    updated_at timestamp(6),
    version    integer,
    name       varchar(255),
    symbol     varchar(255)
);

create table if not exists exchanges
(
    id              bigint generated by default as identity
        primary key,
    created_at      timestamp(6),
    updated_at      timestamp(6),
    version         integer,
    name            varchar(255),
    private_api_url varchar(255),
    private_ws_url  varchar(255),
    public_api_url  varchar(255),
    public_ws_url   varchar(255),
    status          varchar(255)
        constraint exchanges_status_check
            check ((status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying])::text[]))
);

create table if not exists currency_exchanges
(
    id              bigint generated by default as identity
        primary key,
    created_at      timestamp(6),
    updated_at      timestamp(6),
    version         integer,
    exchange_symbol varchar(255),
    scale_override  integer,
    currency_id     bigint
        constraint fk803oj0fe56oy94xd8tvldatu6
            references currencies,
    exchange_id     bigint
        constraint fkas3l6w1g0o4p8ff8mxlqwpf7i
            references exchanges
);

create table if not exists exchange_accounts
(
    id          bigint generated by default as identity
        primary key,
    created_at  timestamp(6),
    updated_at  timestamp(6),
    version     integer,
    api_key_ref varchar(255),
    is_primary  boolean,
    label       varchar(255),
    exchange_id bigint
        constraint fkb7ko6ajm2jpu470dh4bf5j0j6
            references exchanges
);

create table if not exists balance_locks
(
    id                  bigint generated by default as identity
        primary key,
    created_at          timestamp(6),
    updated_at          timestamp(6),
    version             integer,
    amount              numeric(38, 2),
    expires_at          timestamp(6),
    reason              varchar(255),
    signal_id           varchar(255),
    currency_id         bigint
        constraint fk58e88h4x5e4ip2f8umba5pvqr
            references currencies,
    exchange_account_id bigint
        constraint fkduj8gfgrcnn0ct8hin0wik3dy
            references exchange_accounts
);

create table if not exists balances
(
    id                  bigint generated by default as identity
        primary key,
    created_at          timestamp(6),
    updated_at          timestamp(6),
    version             integer,
    available           numeric(38, 2),
    reserved            numeric(38, 2),
    currency_id         bigint
        constraint fk6p7m5s2qtv5w43fwhcekbfaew
            references currencies,
    exchange_account_id bigint
        constraint fkjdiqa4sqwup80qxln5x7pmdaq
            references exchange_accounts
);

create table if not exists pairs
(
    id                bigint generated by default as identity
        primary key,
    created_at        timestamp(6),
    updated_at        timestamp(6),
    version           integer,
    symbol            varchar(255),
    base_currency_id  bigint
        constraint fkdthml0p1l6ny7avefgjhmk3tp
            references currencies,
    quote_currency_id bigint
        constraint fkbvlqkrswgn9vtu2umgggu3q8p
            references currencies
);

create table if not exists pair_exchanges
(
    id              bigint generated by default as identity
        primary key,
    created_at      timestamp(6),
    updated_at      timestamp(6),
    version         integer,
    exchange_symbol varchar(255),
    maker_fee_bps   numeric(38, 2),
    max_order_size  numeric(38, 2),
    min_notional    numeric(38, 2),
    pack_size       numeric(38, 2),
    status          varchar(255)
        constraint pair_exchanges_status_check
            check ((status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying, 'DELISTED'::character varying])::text[])),
    step_size       numeric(38, 2),
    taker_fee_bps   numeric(38, 2),
    tick_size       numeric(38, 2),
    exchange_id     bigint
        constraint fkp40xj3ma6cp6t69fnwkyte2ps
            references exchanges,
    pair_id         bigint
        constraint fkeguq0l10ftxgbbtc9ilnbs3nk
            references pairs
);

create table if not exists signals
(
    id           bigint generated by default as identity
        primary key,
    created_at   timestamp(6),
    updated_at   timestamp(6),
    version      integer,
    constraints  oid,
    expected_pnl numeric(38, 2),
    source       varchar(255),
    status       varchar(255)
        constraint signals_status_check
            check ((status)::text = ANY
                   ((ARRAY ['RECEIVED'::character varying, 'VALIDATED'::character varying, 'EXECUTING'::character varying, 'FILLED'::character varying, 'PARTIAL'::character varying, 'CANCELLED'::character varying, 'REJECTED'::character varying])::text[])),
    ttl_ms       bigint
);

create table if not exists execution_reports
(
    id                 bigint generated by default as identity
        primary key,
    created_at         timestamp(6),
    updated_at         timestamp(6),
    version            integer,
    final_state        varchar(255),
    latency_ms         bigint,
    net_position_delta numeric(38, 2),
    pnl_realized       numeric(38, 2),
    slippage_bps       numeric(38, 2),
    signal_id          bigint
        constraint fkn3s41qfp6rlpls7magxdcgjjg
            references signals
);

create table if not exists hedge_actions
(
    id             bigint generated by default as identity
        primary key,
    created_at     timestamp(6),
    updated_at     timestamp(6),
    version        integer,
    cause          varchar(255),
    from_order_id  bigint,
    hedge_order_id bigint,
    qty            numeric(38, 2),
    result_details oid,
    status         varchar(255)
        constraint hedge_actions_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'SUCCESS'::character varying, 'FAILED'::character varying])::text[])),
    signal_id      bigint
        constraint fkp30fx4welth8wxalsywyjwh7f
            references signals
);

create table if not exists orders
(
    id                  bigint generated by default as identity
        primary key,
    created_at          timestamp(6),
    updated_at          timestamp(6),
    version             integer,
    avg_price           numeric(38, 2),
    client_order_id     varchar(255),
    closed_at           timestamp(6),
    exchange_order_id   varchar(255),
    filled_qty          numeric(38, 2),
    notional            numeric(38, 2),
    price               numeric(38, 2),
    qty                 numeric(38, 2),
    qty_exec            numeric(38, 2),
    sent_at             timestamp(6),
    side                varchar(255),
    status              varchar(255)
        constraint orders_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'SENT'::character varying, 'PARTIAL'::character varying, 'FILLED'::character varying, 'CANCELLED'::character varying])::text[])),
    tif                 varchar(255),
    type                varchar(255),
    exchange_id         bigint
        constraint fkgvcfb2eo5ycr20vfabtrbadqb
            references exchanges,
    exchange_account_id bigint
        constraint fk79822rap2gsmgeyw2n5e92sgf
            references exchange_accounts,
    pair_id             bigint
        constraint fk49fqh0toto23e5mssih4mif5d
            references pairs,
    signal_id           bigint
        constraint fkq87va2y4v5odbryaifgd7xmob
            references signals
);

create table if not exists order_events
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp(6),
    updated_at timestamp(6),
    version    integer,
    event      varchar(255),
    payload    oid,
    order_id   bigint
        constraint fkjkqdh6opohx4rx9719gyn31aa
            references orders
);

create table if not exists order_fills
(
    id              bigint generated by default as identity
        primary key,
    created_at      timestamp(6),
    updated_at      timestamp(6),
    version         integer,
    fee_amount      numeric(38, 2),
    fill_seq        integer,
    filled_at       timestamp(6),
    filled_qty      numeric(38, 2),
    price           numeric(38, 2),
    trade_id        varchar(255),
    fee_currency_id bigint
        constraint fktf6oogkq2p5u9k3fxp6apa6p5
            references currencies,
    order_id        bigint
        constraint fkkmjhqayxwj924lpuedu6ctdc1
            references orders
);

create table if not exists signal_events
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp(6),
    updated_at timestamp(6),
    version    integer,
    event      varchar(255),
    payload    oid,
    signal_id  bigint
        constraint fksr2jpkn5llmsysmxeqnwwnm66
            references signals
);

create table if not exists signal_legs
(
    id           bigint generated by default as identity
        primary key,
    created_at   timestamp(6),
    updated_at   timestamp(6),
    version      integer,
    desired_role varchar(255),
    price        numeric(38, 2),
    qty          numeric(38, 2),
    side         varchar(255),
    tif          varchar(255),
    exchange_id  bigint
        constraint fkfumiwxgcnrfquhrvyjewopaja
            references exchanges,
    pair_id      bigint
        constraint fk1tdcve4stqjsq2l39w1hunqxi
            references pairs,
    signal_id    bigint
        constraint fknfc76avayjjv9373ejlvow1yx
            references signals
);
